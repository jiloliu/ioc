plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.bogon'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.2")
}
dependencies {
	implementation project(':grpc-protobuf')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation "io.grpc:grpc-netty:1.65.0"
	implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE' exclude group: 'io.grpc', module: 'grpc-netty-shaded'
	implementation 'mysql:mysql-connector-java:8.0.33'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('buildDockerImage', Exec) {
	dependsOn bootJar // 确保在构建Docker镜像之前构建JAR文件

	commandLine"bash", "-c", "echo \$REGISTRY_PASSWORD | docker login --username=\$REGISTRY_USERNAME --password-stdin \$REGISTRY " +
			"&& docker build -f Dockerfile -t \$REGISTRY/jiloliu/ioc:${version} . " +
			"&& docker push \$REGISTRY/jiloliu/ioc:${version}"

}

